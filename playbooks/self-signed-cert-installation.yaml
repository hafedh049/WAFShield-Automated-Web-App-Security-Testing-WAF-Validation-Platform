---
- name: Generate Self-Signed SSL Certificate on Ansible Master
  hosts: localhost
  become: true
  vars:
    ssl_cert_path: /etc/ssl/certs/iso.crt
    ssl_key_path: /etc/ssl/private/iso.key
    ssl_common_name: "iso.local"

  tasks:
    - name: Ensure private directory exists
      file:
        path: /etc/ssl/private
        state: directory
        mode: "0700"

    - name: Generate private key
      command: >
        openssl genrsa -out {{ ssl_key_path }} 2048
      args:
        creates: "{{ ssl_key_path }}"

    - name: Generate self-signed certificate
      command: >
        openssl req -new -x509 -key {{ ssl_key_path }}
        -out {{ ssl_cert_path }}
        -days 365
        -subj "/CN={{ ssl_common_name }}"
      args:
        creates: "{{ ssl_cert_path }}"

- name: Deploy SSL Certificate and Key to HAProxy
  hosts: ELB-I, ELB-II
  become: true
  vars:
    ssl_cert_path: /etc/ssl/certs/iso.crt
    ssl_key_path: /etc/ssl/private/iso.key
    haproxy_cert_dir: /etc/haproxy/certs
    haproxy_combined_cert: /etc/haproxy/certs/iso.pem

  tasks:
    - name: Ensure HAProxy certs directory exists
      file:
        path: "{{ haproxy_cert_dir }}"
        state: directory
        mode: "0755"

    - name: Copy certificate to HAProxy
      copy:
        src: "{{ ssl_cert_path }}"
        dest: "{{ haproxy_cert_dir }}/iso.crt"
        mode: "0644"

    - name: Copy private key to HAProxy
      copy:
        src: "{{ ssl_key_path }}"
        dest: "{{ haproxy_cert_dir }}/iso.key"
        mode: "0600"

    - name: Combine cert and key into single pem file for HAProxy
      shell: cat {{ haproxy_cert_dir }}/iso.crt {{ haproxy_cert_dir }}/iso.key > {{ haproxy_combined_cert }}
      args:
        creates: "{{ haproxy_combined_cert }}"
