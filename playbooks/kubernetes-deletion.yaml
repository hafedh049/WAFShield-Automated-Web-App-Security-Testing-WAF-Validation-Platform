---
# Delete / Reset K3s Cluster (Full Cleanup)
# Run against: CP1, CP2, CP3, W1, W2, W3, W4

- name: Cleanup & Remove K3s from all nodes
  hosts: all
  become: true
  tasks:
    # 1️⃣ Stop any K3s services
    - name: Stop K3s server service if exists
      service:
        name: k3s
        state: stopped
      ignore_errors: true

    - name: Stop K3s agent service if exists
      service:
        name: k3s-agent
        state: stopped
      ignore_errors: true

    # 2️⃣ Kill running k3s processes (defensive)
    - name: Kill leftover k3s processes
      shell: |
        pkill -f k3s || true
      ignore_errors: true

    # 3️⃣ Remove K3s binary
    - name: Remove K3s binary
      file:
        path: /usr/local/bin/k3s
        state: absent
      ignore_errors: true

    # 4️⃣ Remove K3s installed directories
    - name: Remove K3s data directories
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/rancher
        - /var/lib/rancher
        - /var/lib/kubelet
        - /etc/k3s
      ignore_errors: true

    # 5️⃣ Flush IPTables rules (recommended after K3s)
    - name: Flush IPTables rules (optional but clean)
      shell: |
        iptables -F || true
        iptables -t nat -F || true
      ignore_errors: true

    # 6️⃣ Cleanup leftover configs
    - name: Remove K3s service files
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/systemd/system/k3s.service
        - /etc/systemd/system/k3s-agent.service
      ignore_errors: true

    # 7️⃣ Reload systemd daemon
    - name: Reload systemd daemon
      command: systemctl daemon-reload

    # 8️⃣ Final clean verify
    - name: Verify removal
      shell: |
        if command -v k3s >/dev/null 2>&1; then
          echo "K3s still exists!"
          exit 1
        else
          echo "K3s removed successfully."
        fi
      register: verify_result
      changed_when: false

    - debug:
        msg: "{{ verify_result.stdout }}"
